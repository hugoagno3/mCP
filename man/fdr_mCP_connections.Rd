% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/fdr_mCP_connections.R
\name{fdr_mCP_connections}
\alias{fdr_mCP_connections}
\title{fdr_mCP_connections}
\usage{
fdr_mCP_connections(
  corum_database,
  experiment_data,
  N_fractions = 35,
  specie = "hsapiens",
  filter = 0.81,
  n_simulations = 10,
  Output_cpp_plotter = Output_cpp_plotter,
  fdr_limit = 0.05,
  set_seed = TRUE
)
}
\arguments{
\item{corum_database}{The corum data base.}

\item{experiment_data}{A matrix that has protein_id in the first column and the detected intensities in the other colums.}

\item{N_fractions}{Number of fractions in your experimet}

\item{specie}{Write: "hsapiens" if you work with homosapiens.}

\item{filter}{Pearson Correlation filter for the analysis}

\item{n_simulations}{number of simulations 10 by default}

\item{Output_cpp_plotter}{output list of detected protein complexes function cpp_plotter}

\item{set_seed}{a TRUE or FALSE setting to standarise simulations.}

\item{file_name}{this is the file name of the output, is a string, It should be writen within "". For example "outputname"}

\item{save_file}{could be TRUE or FALSE it generate an csv file with results of Fold Discovery Rate per protein complexes}

\item{Risk_fraction}{is a number indicating the fraction where all monomeric components of the protein complex should be present. It is set to 85\% of the n_fraction.}

\item{monomeric_filter}{a TRUE or FALSE setting that takes out potential protein complexes sie a hight porcentaje of monomeric conformation. This is related to the previous filter by defoult is off so the user can decide.}
}
\value{
a list of controlled FDr Portein compleses.
}
\description{
This function in an internal function of fdr_mCP_standard_modified(). This function needs as inputs a list of complexes outputs generates by mCP() or cpp_ploter, the experimental matrix and a Target list of protein complexes (CORUM or complex portal adapted). It performs the first simulation to detect number of binary interactions that are higher than a clustering filter (pearson). It builds different matrices from your experimental matrix and evaluates this "fake matrix" into  mCP workflow by using the selected filter. The output is numeric matrix with rows named as protein complexes that indicates detected false positives (1)  or false negative (0).
}
\examples{

data("Corum_Humans_Database")
data("Hek293_P2_1")
mCP_Hek_P2_1 <- mCP(corum_database = Corum_Humans_Database,
                                     experiment_data = Hek293_P2_1, 
                                     N_fractions = 35, 
                                     specie = "hsapiens",
                                     method_cor = "pearson",
                                     network = TRUE,
                                     format = "pdf", 
                                     output_name = "mCP_Hek293_P2_1",
                                     filter = 0.81,
                                     heat_map = TRUE,
                                     relative = FALSE,
                                     fdr_limit = 0.05,
                                     n_simulations= 7,
                                     monomeric_filter = FALSE,
                                     mw = TRUE,
                                     dynamic = TRUE,
                                     Risk_fraction = 31,
                                     set_seed = FALSE,
                                     display_weights = TRUE,
                                     standard_weights = list(list(x =6, label= "2700 KDa"), 
                                                        list(x = 11, label ="950 KDa"),
                                                        list(x = 14, label = "750 KDa"), 
                                                        list(x =27, label ="146 KDa"),
                                                        list(x =30, label ="60 KDa")))

 #### Run the function
FDR_DIANN_dDIA_P2_12_<- fdr_mCP_connections (corum_database= Corum_Humans_Database,
                                            Output_cpp_plotter = mCP_Hek_P2_1, 
                                            experiment_data= Hek293_P2_1,
                                            N_fractions = 35,
                                            specie = "mmusculus",
                                            filter=0.81,
                                            n_simulations= 4,
                                            fdr_limit = 0.05,
                                            set_seed= TRUE)


}
